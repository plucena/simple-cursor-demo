"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getDefaultProvider = getDefaultProvider;
exports.printNetworkDetails = printNetworkDetails;
exports.getLatestBlock = getLatestBlock;
exports.isProviderConnected = isProviderConnected;
const ethers_1 = require("ethers");
function getDefaultProvider(cotiNetwork) {
    return new ethers_1.JsonRpcProvider(cotiNetwork);
}
async function printNetworkDetails(provider) {
    if (!await isProviderConnected(provider)) {
        throw Error("provider not connected");
    }
    if (provider instanceof ethers_1.JsonRpcProvider) {
        console.log(`provider: ${provider._getConnection().url}`);
    }
    const network = await provider.getNetwork();
    console.log(`chainId: ${network.chainId}`);
    console.log(`latest block: ${await getLatestBlock(provider)}`);
}
async function getLatestBlock(provider) {
    if (!await isProviderConnected(provider)) {
        throw Error("provider not connected or address is not valid address");
    }
    return await provider.getBlockNumber();
}
async function isProviderConnected(provider) {
    if (provider == undefined) {
        throw Error('Provider does not exist.');
    }
    const network = await provider.getNetwork();
    if (!network)
        return false;
    return true;
}
