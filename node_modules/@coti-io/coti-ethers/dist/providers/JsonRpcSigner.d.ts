import { ctString, ctUint, itString, itUint } from "@coti-io/coti-sdk-typescript";
import { JsonRpcSigner as BaseJsonRpcSigner, JsonRpcApiProvider } from "ethers";
import { OnboardInfo, RsaKeyPair } from "../types";
export declare class JsonRpcSigner extends BaseJsonRpcSigner {
    #private;
    private _autoOnboard;
    private _userOnboardInfo?;
    constructor(provider: JsonRpcApiProvider, address: string, userOnboardInfo?: OnboardInfo);
    getAutoOnboard(): boolean;
    getUserOnboardInfo(): OnboardInfo | undefined;
    setUserOnboardInfo(onboardInfo?: Partial<OnboardInfo> | undefined | null): void;
    setAesKey(key: string): void;
    setOnboardTxHash(hash: string): void;
    setRsaKeyPair(rsa: RsaKeyPair): void;
    enableAutoOnboard(): void;
    disableAutoOnboard(): void;
    clearUserOnboardInfo(): void;
    encryptValue(plaintextValue: bigint | number | string, contractAddress: string, functionSelector: string): Promise<itUint | itString>;
    decryptValue(ciphertext: ctUint | ctString): Promise<bigint | string>;
    generateOrRecoverAes(onboardContractAddress?: string): Promise<void>;
}
