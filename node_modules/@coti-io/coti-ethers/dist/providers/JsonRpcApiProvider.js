"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.JsonRpcApiProvider = void 0;
const ethers_1 = require("ethers");
const JsonRpcSigner_1 = require("./JsonRpcSigner");
class JsonRpcApiProvider extends ethers_1.JsonRpcApiProvider {
    constructor(network, options) {
        super(network, options);
    }
    async getSigner(address, userOnboardInfo) {
        if (address == null) {
            address = 0;
        }
        const accountsPromise = this.send("eth_accounts", []);
        // Account index
        if (typeof (address) === "number") {
            const accounts = (await accountsPromise);
            if (address >= accounts.length) {
                throw new Error("no such account");
            }
            return new JsonRpcSigner_1.JsonRpcSigner(this, accounts[address], userOnboardInfo);
        }
        const { accounts } = await (0, ethers_1.resolveProperties)({
            network: this.getNetwork(),
            accounts: accountsPromise
        });
        // Account address
        address = (0, ethers_1.getAddress)(address);
        for (const account of accounts) {
            if ((0, ethers_1.getAddress)(account) === address) {
                return new JsonRpcSigner_1.JsonRpcSigner(this, address, userOnboardInfo);
            }
        }
        throw new Error("invalid account");
    }
}
exports.JsonRpcApiProvider = JsonRpcApiProvider;
